#Sort intervals function
# two posibility
#
# First:
# Starting value is equal
# Second:
# Starting value is not equal
# with the first one, we will let small end value stand above
#
# def compare_equal(a, b):
#     if a[0] == b[0] and a[1] == b[1]:
#         return True
#     return False
#
# def compare_smaller(a, b):
#     if a[0] < b[0] or ( a[0] == b[0] and a[1] < b[1] ):
#         return True
#     return False
#
# def compare_bigger(a, b):
#     if a[0] > b[0] or ( a[0] == b[0] and a[1] > b[1] ):
#         return True
#     return False

def binary_search(arr, val, start, end):
    #if a[0] is the last step of our binary search, we will have to find pos to put our val this way
    if start == end:
        if arr[start] > val:
            return start
        else:
            return start + 1

    #if start > end mean that left pointer has just changed. <-> binary_search_temp < val
    if start > end:
        return start

    #from now its normal binary search steps
    #change mid
    #check condition:
        #if arr[mid] < val:
            #run binary_search(arr, val, mid + 1, end)
        #else:
            #run binary_search(aar, val, start, mid - 1)
    mid = (start + end) // 2
    if arr[mid] < val:
        return binary_search(arr, val, mid + 1, end)
    elif arr[mid] > val:
        return binary_search(arr, val, start, mid - 1)
    else:
        return mid

def binary_sort(arr):
    #iterate from second element (Index one) to the end of the array
    #the left part of i is always sorted
    #save arr[i] as a variable val
    #use binary search to get position (we call it "pos" variable) that just bigger than "val"
    #shift all right elements from pos to i - 1 toward the right
    #simutiously put [val] in before arr["pos"]

    for i in range(1, len(arr)):
        val = arr[i]
        pos = binary_search(arr, val, 0, i - 1)
        arr = arr[:pos] + [val] + arr[pos : i] + arr[i + 1:]
    return arr

#if occur overlapping intervals, turn two temp interval to one
#else: turn temp interval to the new one, then add old interval's length to the sum
#
def sum_of_interval(arr):
    temp_interval = arr[0]
    sum = 0
    for index in range(1, len(arr)):
        #overlapping intervals
        if temp_interval[1] >= arr[index][0] and temp_interval[1] < arr[index][1]:
            temp_interval = [temp_interval[0], arr[index][1]]
        elif temp_interval[1] >= arr[index][0] and temp_interval[1] >= arr[index][1]:
            temp_interval = [temp_interval[0], temp_interval[1]]
        else:
            sum += temp_interval[1] - temp_interval[0]
            temp_interval = arr[index]
    sum += temp_interval[1] - temp_interval[0]
    return sum

arr = [(1, 4), (7, 10), (3, 5)]
sorted_list = binary_sort(arr)
sum = sum_of_interval(sorted_list)
print(sum)


#test
# [(-488, -103), (-343, -317), (-160, 198), (-145, 51), (-120, 119), (0, 426), (179, 471), (217, 259)] should equal 959
# [(-460, -406), (-379, 500), (-166, 407), (-125, 413), (-124, 181), (-123, 261), (182, 497)] should equal 933
# [(-378, 360), (-320, 63), (-255, 81), (-184, -43), (-173, 116), (-169, 346), (-127, 369), (-101, -18), (-91, 92), (24, 295), (48, 390), (99, 188), (197, 360), (214, 239), (215, 396), (387, 445), (464, 488)] should equal 847
# [(-78, 194), (108, 330)] should equal 408
# [(190, 435), (346, 423), (479, 494)] should equal 260
# [(-269, -218), (135, 382), (183, 371), (487, 491)] should equal 302
# [(90, 178)] should equal 88
# [(-330, -50), (-190, -81), (107, 347)] should equal 520
# [(-496, 150), (-382, 489), (-336, 495), (-189, 483), (-173, -132), (-155, 344), (-129, 441), (-18, 468), (9, 226), (40, 137), (291, 410), (415, 477), (495, 496)] should equal 992
# [(-465, 379), (-448, 461), (-360, 372), (-189, 369), (-26, 385), (33, 275), (47, 407), (72, 243), (133, 248), (186, 414), (200, 390), (201, 460), (242, 470), (260, 410), (430, 435)] should equal 935
# [(-396, 301), (-188, 368), (-178, 9), (-12, 76), (124, 249), (207, 343), (388, 436)] should equal 812
# [(-250, 108), (-48, 321), (36, 166), (273, 332)] should equal 582
# [(-367, 499), (-350, 165), (-330, -302), (-286, 33), (-250, -20), (-233, 382), (-145, -113), (-62, 251), (-46, 323), (65, 411), (497, 499)] should equal 866
# [(-485, -13), (-452, 140), (-448, -144), (-407, -133), (-315, 312), (-72, 446), (23, 107), (31, 60), (144, 251), (157, 458), (165, 445), (235, 270), (451, 477)] should equal 962
# [(-217, 188), (-7, 26), (-1, 150), (60, 496), (223, 453)] should equal 713
# [(-457, 387), (-345, 204), (-274, -66), (-224, -74), (-140, 119), (-98, -77), (-79, -31), (44, 338)] should equal 844
# [(-385, 140), (-87, 355), (-39, 481), (56, 150), (116, 266), (214, 305), (229, 311), (325, 367), (386, 436)] should equal 866
# [(-334, 218), (-267, -66), (-58, 193), (2, 392), (112, 378), (134, 293), (261, 305), (355, 357), (425, 438), (458, 466), (470, 483), (496, 498)] should equal 762
# [(-486, -213), (-482, 485), (-411, 187), (-313, 427), (-274, 257), (-80, 56), (-74, 120), (10, 198), (60, 418), (77, 404), (108, 461), (122, 168), (294, 326), (321, 346), (345, 436), (458, 489)] should equal 975
# [(-434, -252), (-366, -328), (-249, 3), (-82, 453), (-81, 474), (-8, 325), (-5, 282), (10, 167), (83, 174), (102, 268), (161, 438), (242, 461), (307, 324), (340, 428), (495, 497)] should equal 907
# [(-393, 360), (-382, 176), (-354, -237), (-333, 257), (-96, 146)] should equal 753
# [(-376, 469), (-280, -154), (-53, 55), (-36, 134), (-8, 80), (140, 341), (253, 393), (285, 341), (309, 446), (330, 389), (489, 492)] should equal 848
# [(-197, 208), (24, 154), (90, 149), (102, 462), (375, 462), (378, 404), (426, 448)] should equal 659
# [(-397, -31), (-338, 333), (226, 481), (247, 305), (409, 442), (477, 483)] should equal 880
# [(-479, -293), (-448, 149), (-333, -39), (-305, 131), (-303, 295), (-245, -86), (-233, 216), (-145, 202), (-140, 417), (-41, 387), (14, 116), (60, 385), (252, 408), (277, 452), (455, 481), (463, 478), (489, 491)] should equal 959
# [(-480, -420), (-422, -377), (-420, -54), (-328, -125), (-281, -162), (-233, 259), (-215, 230), (-192, 5), (-79, 472), (-49, 327), (110, 482), (252, 267)] should equal 962
# [(-418, 457), (-394, 70), (-159, 335), (-139, -126), (-90, -47), (9, 50), (17, 151), (61, 121), (174, 348), (227, 241), (243, 409), (246, 500), (325, 338), (375, 401), (403, 449), (429, 433)] should equal 918
# [(-499, -305), (-393, 63), (-360, 452), (-319, -222), (-278, 479), (303, 461), (357, 439), (447, 460)] should equal 978
# [(-464, -15), (-451, -161), (-429, -195), (-381, 167), (-378, -127), (-312, -207), (-199, 256), (-198, 306), (29, 492), (44, 463), (60, 312), (181, 233), (200, 351), (205, 403), (235, 391), (250, 429), (262, 276), (286, 342), (346, 425)] should equal 956
# [(-483, -431), (-425, -198), (-327, 74), (-258, -246), (-167, 238), (-94, 255), (-14, 53), (287, 461), (327, 339), (408, 420), (432, 495), (438, 489)] should equal 940
# [(-354, 61), (-315, -102), (-230, 418), (-209, -194), (-68, 141), (-61, -58), (-18, 46), (348, 380), (399, 452), (449, 453)] should equal 807
# [(-444, 303), (-326, -135), (-189, 280), (-68, 300), (224, 464), (253, 364), (409, 446)] should equal 908
# [(-452, 105), (-257, 317), (-123, 299), (-76, 203), (-58, 36), (-36, 170), (-14, 137), (121, 482), (124, 472), (151, 401), (262, 450), (297, 436), (329, 433), (384, 453), (434, 457)] should equal 934
# [(-222, 395), (-198, 142), (13, 475), (129, 417), (178, 354), (216, 319), (262, 398), (288, 455)] should equal 697
# [(-423, 53), (-263, 354), (-158, -99), (358, 395), (490, 491)] should equal 815
# [(281, 313)] should equal 32
# [(363, 441), (456, 486)] should equal 108
# [(-462, -451), (-452, 57), (-445, 219), (-405, 28), (-337, -151), (-323, 473), (-254, 325), (-32, 88), (23, 494), (42, 420), (91, 484), (241, 314), (263, 394), (289, 460), (372, 404), (456, 498), (459, 488)] should equal 960
# [(-308, 447), (-237, -64), (-218, -2), (24, 364), (66, 140), (143, 416), (223, 300), (310, 426), (397, 413), (488, 497)] should equal 764
# [(147, 472), (323, 478), (383, 465), (447, 467), (494, 498)] should equal 335
# [(106, 439), (334, 431)] should equal 333
# [(-478, 371), (-417, 220), (-281, 145), (-254, 38), (-223, -5), (-200, 152), (-180, 327), (-156, -96), (-141, 264), (-29, 390), (96, 446), (224, 354), (225, 251), (347, 385), (396, 479), (418, 447)] should equal 957
# [(-279, -240)] should equal 39
# [(-487, -455), (-376, 225), (-349, -180), (-191, -96), (-174, 93), (-58, 248), (98, 490), (356, 457)] should equal 898
# [(-483, 344), (-455, -178), (-418, -264), (-207, 286), (-74, 346), (-67, 237), (24, 30), (82, 146), (100, 450), (119, 178), (283, 384), (400, 444), (441, 469)] should equal 952
# [(-356, 346), (-311, -274), (-308, 201), (-293, -105), (-280, -2), (-173, 192), (-152, 115), (-80, 49), (39, 163), (101, 199), (262, 456), (274, 310), (317, 346), (320, 350), (327, 365), (446, 487)] should equal 843
# [(-327, 431), (174, 460)] should equal 787
# [(-496, 498), (-310, -290), (-177, 328), (-115, 385), (-35, 453), (-27, 305), (6, 403), (139, 149), (234, 242), (240, 342), (305, 372), (355, 472), (421, 442), (426, 441), (469, 495)] should equal 994
# [(-365, -234), (-307, 334), (-248, -106), (-247, 132), (-188, 409), (-7, 195), (44, 97), (216, 430), (322, 500), (483, 484)] should equal 865
# [(-470, -243), (-218, -17), (-218, 138), (-116, 100), (-91, -55), (64, 84), (262, 277), (310, 426), (399, 486)] should equal 774
# [(-485, 495), (-482, -123), (-345, 358), (-281, -160), (-200, 126), (-130, 375), (20, 211), (111, 132), (211, 281), (277, 358), (312, 363), (454, 456)] should equal 980
# [(-487, 178), (-451, -275), (-403, -31), (-351, -300), (-230, 154), (-171, 32), (-128, 379), (-88, 466), (-85, 72), (17, 42), (19, 283), (97, 341), (277, 474), (289, 298), (297, 311), (306, 441)] should equal 961
# [(-465, -343), (-431, -75), (-429, -238), (-380, 449), (-302, -42), (-54, 352), (210, 237), (214, 311), (233, 430), (380, 391), (402, 497)] should equal 962
# [(148, 301), (180, 233)] should equal 153
# [(-303, -99), (-144, 284), (-123, 362), (193, 427), (238, 407), (301, 369), (362, 403), (413, 461), (420, 431), (435, 439)] should equal 764
# [(-341, 150), (-278, 497), (-199, 129), (-166, 315), (22, 104), (161, 475), (183, 298), (463, 470)] should equal 838
# [(-475, 364), (-445, -152), (-246, -197), (-167, 75), (2, 144), (99, 434), (121, 366), (122, 126), (135, 206), (283, 398), (316, 440), (332, 409), (365, 376), (401, 445), (458, 462)] should equal 924
# [(-121, 46)] should equal 167
# [(-486, 113), (-453, 499), (-437, -408), (-434, -192), (-285, -151), (-264, 120), (-126, 162), (119, 200), (190, 366), (203, 438), (254, 287), (383, 480), (387, 484), (406, 461), (446, 462), (474, 494), (499, 500)] should equal 986
# [(-480, 22), (-412, -171), (-392, 298), (-170, 277), (-169, -101), (-158, 116), (-53, -33), (8, 253), (27, 161), (51, 390), (58, 199), (78, 214), (213, 444), (232, 486), (235, 303), (292, 344), (354, 366), (403, 427), (408, 468)] should equal 966
# [(-333, 385), (-242, -2), (127, 359), (180, 347), (191, 377), (314, 489), (441, 465)] should equal 822
# [(-379, -183), (-344, 497), (-177, -159), (12, 481), (142, 455), (264, 415), (278, 337), (321, 421), (324, 367), (380, 396), (380, 400), (425, 441), (483, 484)] should equal 876
# [(-454, 292), (-326, 3)] should equal 746
# [(-401, 428), (-298, -159), (-194, -72), (-171, 223), (127, 392), (239, 442), (369, 424), (380, 398)] should equal 843
# [(-471, 326), (-426, 491), (-305, 309), (-268, 153), (-258, 188), (-203, -192), (-166, 214), (7, 242), (94, 237), (185, 280), (235, 466), (378, 402), (395, 445)] should equal 962
# [(-383, -114), (-31, 143)] should equal 443
# [(-460, -55), (-133, -50)] should equal 410
# [(56, 370)] should equal 314
# [(-395, -342), (-381, -248), (-55, 489), (-34, -21), (193, 480), (263, 482)] should equal 691
# [(-471, -337), (-423, 151), (-333, 48), (-298, 359), (-275, -159), (-216, 377), (-42, 408), (-16, 347), (43, 205), (199, 452), (264, 362)] should equal 923
# [(-265, -219), (192, 288), (358, 390)] should equal 174
# [(-349, -39), (-341, -290), (-292, 31), (-287, 404), (-286, -201), (-281, -90), (-266, 421), (-166, 134), (-147, 57), (-77, 332), (-45, 486), (-20, 256), (23, 325), (37, 431), (151, 252), (284, 449), (352, 401), (416, 439), (496, 499)] should equal 838
# [(-494, -97), (-288, -54), (-236, -234), (-195, 227), (-85, 163), (-23, 169), (0, 335), (62, 379), (120, 313), (125, 230), (160, 483), (213, 383), (216, 237), (314, 461), (369, 387), (395, 495), (397, 465), (479, 481), (487, 492)] should equal 989
# [(-457, -86), (-409, 471), (-395, 78), (-343, 400), (-302, 39), (-262, -185), (-151, 216), (-121, 165), (-15, 500), (52, 152), (56, 229), (159, 241), (176, 213), (254, 308), (448, 458)] should equal 957
# [(-395, 457), (-393, 264), (-363, -281), (-196, -93), (-68, 19), (-51, 418), (197, 260), (225, 248), (334, 444), (335, 493), (340, 388), (399, 494), (426, 497), (474, 475)] should equal 892
# [(-315, 24), (-140, 87), (-60, 1), (99, 423), (142, 290), (236, 349), (304, 487), (487, 488)] should equal 791
# [(-463, -249), (-273, 85), (-256, 94), (-181, 337), (-117, 78), (-79, -19), (108, 357), (121, 153), (131, 144), (158, 279), (180, 333), (189, 286), (241, 381), (288, 304), (313, 461), (331, 356), (361, 487), (415, 463), (463, 470)] should equal 950
# [(-489, 4), (-455, -340), (-439, -20), (-387, -183), (-237, 144), (-226, -128), (-198, 463), (-150, 375), (-146, 336), (-102, 287), (-83, 72), (146, 475), (308, 416), (418, 497), (464, 480)] should equal 986
# [(-453, 64), (-425, 302), (-409, 10), (-400, 289), (-270, -142), (-194, 461), (-97, 32), (-70, 13), (-23, 210), (-21, 329), (8, 259), (52, 273), (127, 195), (211, 233), (306, 309), (337, 445)] should equal 914
# [(-436, -46), (-362, -123), (-359, 122), (-320, 181), (-320, 446), (-319, 198), (-276, 16), (-147, 368), (-113, 355), (-92, 249), (-65, 412), (83, 376), (104, 385), (310, 386), (335, 470), (356, 437), (382, 451), (417, 494), (449, 469)] should equal 930
# [(-335, 60), (-258, -181), (-56, -24), (-36, 39), (100, 445), (138, 368), (140, 380), (180, 479), (192, 348), (299, 435), (337, 428), (358, 414), (414, 457), (450, 487)] should equal 782
# [(-485, 261), (-477, -394), (-382, -261), (-350, -200), (-220, -150), (-193, 348), (-114, -46), (-78, 131), (-43, 498), (83, 447), (133, 392), (155, 195), (187, 210), (188, 331), (224, 362), (289, 306), (355, 375), (431, 450)] should equal 983
# [(-237, 398), (-124, 190), (-44, 69), (-36, 95), (129, 213), (365, 471), (446, 476)] should equal 713
# [(-492, -86), (-191, 429), (117, 471), (493, 496)] should equal 966
# [(-167, 475), (27, 316), (271, 423), (283, 411), (482, 493)] should equal 653
# [(-111, -87), (-109, -7), (-104, 481)] should equal 592
# [(-443, -52), (-437, 146), (-414, 92), (-392, -381), (-251, -168), (-238, -195), (-218, -46), (-192, 95), (-71, 75), (-27, 47), (19, 283), (49, 108), (51, 57), (109, 173), (242, 381), (246, 366), (249, 464), (355, 442), (382, 500), (413, 467)] should equal 943
# [(-484, 198), (-478, -470), (-474, 35), (-472, -329), (-430, 79), (-351, -179), (-210, -74), (-185, 294), (-96, 348), (88, 457), (163, 310), (169, 337), (330, 398), (414, 422), (437, 485), (446, 469)] should equal 969
# [(-433, -371), (-429, -280), (-353, 311), (-327, -164), (-137, 184), (-82, 44), (-56, -6), (3, 6), (107, 468), (141, 216), (225, 314), (287, 478), (339, 421), (344, 451), (351, 357), (380, 428), (383, 415), (436, 473), (494, 499)] should equal 916
# [(-484, -219), (-483, -444), (-425, 262), (-398, -232), (-311, 189), (-198, -40), (-182, 212), (-118, 38), (48, 93), (100, 231), (234, 264), (275, 458), (347, 415), (428, 437), (447, 453), (480, 494)] should equal 945
# [(-22, 192), (21, 219), (423, 465)] should equal 283
# [(356, 478)] should equal 122
# [(-436, 237), (-221, 352), (74, 456), (374, 407), (406, 465)] should equal 901
# [(-484, -97), (-464, 145), (-400, -294), (-319, 409), (-184, 351), (-77, 431), (-53, 200), (66, 289), (183, 364), (236, 478), (307, 313), (313, 488), (368, 491), (380, 496), (473, 477)] should equal 980
# [(-369, -272), (-57, 433), (-29, 91), (-4, 68), (55, 288), (499, 500)] should equal 588
# [(-488, -208), (-380, 472), (-330, -71), (-279, 464), (-240, 279), (-233, 182), (-212, -158), (-159, -152), (-121, 7), (-90, -15), (-53, 31), (117, 224), (202, 350), (273, 279), (330, 450), (355, 493), (395, 497), (461, 468), (462, 489), (485, 489)] should equal 985
# [(-282, 479), (-242, 284), (-210, -102), (152, 202), (230, 325), (455, 473), (477, 482)] should equal 764
# [(-388, -75), (-280, 30), (-212, 226), (-146, 345), (-131, 408)] should equal 796
# [(-332, 243), (-327, 77), (-278, -138), (-225, 308), (-216, 186), (-76, 261), (-66, -28), (-15, 421), (11, 44), (27, 32), (50, 332), (69, 224), (146, 377), (158, 385), (170, 360), (219, 316), (232, 485), (280, 444), (470, 482)] should equal 817
# [(-310, 134), (-306, 399), (-272, -155), (-159, 255), (-148, 2), (-141, 129), (-128, -104), (-93, 305), (170, 210), (171, 338), (333, 407), (368, 457), (378, 403), (378, 487)] should equal 797
#
#


